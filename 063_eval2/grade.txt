Grading at 10/29/2024:14:16:57.069908
For commit ID faddb36fcfb47466c3c20b17bdface3e09da9286
Grading at Tue Oct 29 10:16:53 AM EDT 2024
Doing some basic checking for your submission

Step 1
Checking that story-step1 compiles
rm -f *~ story-step3 story-step4 story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
The code compiled (good)
Executable story-step1 exists (good)
Checking with provided test case story.txt
Your file matched the expected output
Now running YOUR tests for step 1

1.1: Current test is story-step1 story.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 2
Checking that story-step2 compiles
rm -f *~ story-step3 story-step4 story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step2.c
gcc -o story-step2 story-step2.o rand_story.o provided.o
rm story-step2.o
The code compiled (good)
Executable story-step2 exists (good)
Now running YOUR tests for step 2

2.1: Current test is story-step2 words.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 3
Checking that story-step3 compiles
rm -f *~ story-step3 story-step4 story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
The code compiled (good)
Executable story-step3 exists (good)
Now running YOUR tests for step 3

3.1: Current test is story-step3 words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==2902597== Memcheck, a memory error detector
==2902597== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2902597== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2902597== Command: ./story-step3 words.txt story2.txt
==2902597== Parent PID: 2902596
==2902597== 
==2902597== 
==2902597== HEAP SUMMARY:
==2902597==     in use at exit: 258 bytes in 22 blocks
==2902597==   total heap usage: 38 allocs, 16 frees, 13,898 bytes allocated
==2902597== 
==2902597== 28 bytes in 4 blocks are definitely lost in loss record 4 of 8
==2902597==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2902597==    by 0x490B58E: strdup (strdup.c:42)
==2902597==    by 0x109F79: replace_category_with_backreference (rand_story.c:185)
==2902597==    by 0x10A136: read_template_with_backreference (rand_story.c:219)
==2902597==    by 0x1094A6: main (story-step3.c:22)
==2902597== 
==2902597== 202 (16 direct, 186 indirect) bytes in 1 blocks are definitely lost in loss record 8 of 8
==2902597==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2902597==    by 0x1097C6: readWords2 (rand_story.c:58)
==2902597==    by 0x109477: main (story-step3.c:19)
==2902597== 
==2902597== LEAK SUMMARY:
==2902597==    definitely lost: 44 bytes in 5 blocks
==2902597==    indirectly lost: 186 bytes in 13 blocks
==2902597==      possibly lost: 0 bytes in 0 blocks
==2902597==    still reachable: 28 bytes in 4 blocks
==2902597==         suppressed: 0 bytes in 0 blocks
==2902597== Reachable blocks (those to which a pointer was found) are not shown.
==2902597== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2902597== 
==2902597== For lists of detected and suppressed errors, rerun with: -s
==2902597== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Step 4
Checking that story-step4 compiles
rm -f *~ story-step3 story-step4 story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step4.c
gcc -o story-step4 story-step4.o rand_story.o provided.o
rm story-step4.o
The code compiled (good)
Executable story-step4 exists (good)
Now running YOUR tests for step 4

4.1: Current test is story-step4 words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==2902662== Memcheck, a memory error detector
==2902662== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2902662== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2902662== Command: ./story-step4 words.txt story2.txt
==2902662== Parent PID: 2902661
==2902662== 
==2902662== 
==2902662== HEAP SUMMARY:
==2902662==     in use at exit: 258 bytes in 22 blocks
==2902662==   total heap usage: 38 allocs, 16 frees, 13,898 bytes allocated
==2902662== 
==2902662== 28 bytes in 4 blocks are definitely lost in loss record 4 of 8
==2902662==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2902662==    by 0x490B58E: strdup (strdup.c:42)
==2902662==    by 0x109FB4: replace_category_with_backreference (rand_story.c:185)
==2902662==    by 0x10A171: read_template_with_backreference (rand_story.c:219)
==2902662==    by 0x1094E1: main (story-step4.c:33)
==2902662== 
==2902662== 202 (16 direct, 186 indirect) bytes in 1 blocks are definitely lost in loss record 8 of 8
==2902662==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2902662==    by 0x109801: readWords2 (rand_story.c:58)
==2902662==    by 0x1094B4: main (story-step4.c:30)
==2902662== 
==2902662== LEAK SUMMARY:
==2902662==    definitely lost: 44 bytes in 5 blocks
==2902662==    indirectly lost: 186 bytes in 13 blocks
==2902662==      possibly lost: 0 bytes in 0 blocks
==2902662==    still reachable: 28 bytes in 4 blocks
==2902662==         suppressed: 0 bytes in 0 blocks
==2902662== Reachable blocks (those to which a pointer was found) are not shown.
==2902662== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2902662== 
==2902662== For lists of detected and suppressed errors, rerun with: -s
==2902662== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

4.2: Current test is story-step4 -n words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==2902775== Memcheck, a memory error detector
==2902775== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2902775== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2902775== Command: ./story-step4 -n words.txt story2.txt
==2902775== Parent PID: 2902774
==2902775== 
==2902775== 
==2902775== HEAP SUMMARY:
==2902775==     in use at exit: 258 bytes in 22 blocks
==2902775==   total heap usage: 41 allocs, 19 frees, 13,946 bytes allocated
==2902775== 
==2902775== 28 bytes in 4 blocks are definitely lost in loss record 4 of 8
==2902775==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2902775==    by 0x490B58E: strdup (strdup.c:42)
==2902775==    by 0x109FB4: replace_category_with_backreference (rand_story.c:185)
==2902775==    by 0x10A171: read_template_with_backreference (rand_story.c:219)
==2902775==    by 0x1094E1: main (story-step4.c:33)
==2902775== 
==2902775== 202 (16 direct, 186 indirect) bytes in 1 blocks are definitely lost in loss record 8 of 8
==2902775==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2902775==    by 0x109801: readWords2 (rand_story.c:58)
==2902775==    by 0x1094B4: main (story-step4.c:30)
==2902775== 
==2902775== LEAK SUMMARY:
==2902775==    definitely lost: 44 bytes in 5 blocks
==2902775==    indirectly lost: 186 bytes in 13 blocks
==2902775==      possibly lost: 0 bytes in 0 blocks
==2902775==    still reachable: 28 bytes in 4 blocks
==2902775==         suppressed: 0 bytes in 0 blocks
==2902775== Reachable blocks (those to which a pointer was found) are not shown.
==2902775== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2902775== 
==2902775== For lists of detected and suppressed errors, rerun with: -s
==2902775== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

You have NOT passed your test cases!
You should go and figure out/understand where thing went wrong
And fix the problem(s) before the deadline

Overall Grade: NO GRADE YET
