Grading at 10/29/2024:23:31:49.159416
For commit ID 6ab3107b9af6c6f852b1c4db3c21d4fb86542dbf
Grading at Tue Oct 29 07:31:45 PM EDT 2024
Doing some basic checking for your submission

Step 1
Checking that story-step1 compiles
rm -f *~ story-step3 story-step4 story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
The code compiled (good)
Executable story-step1 exists (good)
Checking with provided test case story.txt
Your file matched the expected output
Now running YOUR tests for step 1

1.1: Current test is story-step1 story.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 2
Checking that story-step2 compiles
rm -f *~ story-step3 story-step4 story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step2.c
gcc -o story-step2 story-step2.o rand_story.o provided.o
rm story-step2.o
The code compiled (good)
Executable story-step2 exists (good)
Now running YOUR tests for step 2

2.1: Current test is story-step2 words.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 3
Checking that story-step3 compiles
rm -f *~ story-step3 story-step4 story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
The code compiled (good)
Executable story-step3 exists (good)
Now running YOUR tests for step 3

3.1: Current test is story-step3 words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==4094598== Memcheck, a memory error detector
==4094598== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4094598== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==4094598== Command: ./story-step3 words.txt story2.txt
==4094598== Parent PID: 4094597
==4094598== 
==4094598== 
==4094598== HEAP SUMMARY:
==4094598==     in use at exit: 28 bytes in 4 blocks
==4094598==   total heap usage: 38 allocs, 34 frees, 13,898 bytes allocated
==4094598== 
==4094598== LEAK SUMMARY:
==4094598==    definitely lost: 0 bytes in 0 blocks
==4094598==    indirectly lost: 0 bytes in 0 blocks
==4094598==      possibly lost: 0 bytes in 0 blocks
==4094598==    still reachable: 28 bytes in 4 blocks
==4094598==         suppressed: 0 bytes in 0 blocks
==4094598== Reachable blocks (those to which a pointer was found) are not shown.
==4094598== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==4094598== 
==4094598== For lists of detected and suppressed errors, rerun with: -s
==4094598== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Step 4
Checking that story-step4 compiles
rm -f *~ story-step3 story-step4 story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step4.c
gcc -o story-step4 story-step4.o rand_story.o provided.o
rm story-step4.o
The code compiled (good)
Executable story-step4 exists (good)
Now running YOUR tests for step 4

4.1: Current test is story-step4 words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==4094673== Memcheck, a memory error detector
==4094673== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4094673== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==4094673== Command: ./story-step4 words.txt story2.txt
==4094673== Parent PID: 4094672
==4094673== 
==4094673== 
==4094673== HEAP SUMMARY:
==4094673==     in use at exit: 28 bytes in 4 blocks
==4094673==   total heap usage: 38 allocs, 34 frees, 13,898 bytes allocated
==4094673== 
==4094673== LEAK SUMMARY:
==4094673==    definitely lost: 0 bytes in 0 blocks
==4094673==    indirectly lost: 0 bytes in 0 blocks
==4094673==      possibly lost: 0 bytes in 0 blocks
==4094673==    still reachable: 28 bytes in 4 blocks
==4094673==         suppressed: 0 bytes in 0 blocks
==4094673== Reachable blocks (those to which a pointer was found) are not shown.
==4094673== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==4094673== 
==4094673== For lists of detected and suppressed errors, rerun with: -s
==4094673== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

4.2: Current test is story-step4 -n words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==4094715== Memcheck, a memory error detector
==4094715== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4094715== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==4094715== Command: ./story-step4 -n words.txt story2.txt
==4094715== Parent PID: 4094714
==4094715== 
==4094715== 
==4094715== HEAP SUMMARY:
==4094715==     in use at exit: 28 bytes in 4 blocks
==4094715==   total heap usage: 41 allocs, 37 frees, 13,946 bytes allocated
==4094715== 
==4094715== LEAK SUMMARY:
==4094715==    definitely lost: 0 bytes in 0 blocks
==4094715==    indirectly lost: 0 bytes in 0 blocks
==4094715==      possibly lost: 0 bytes in 0 blocks
==4094715==    still reachable: 28 bytes in 4 blocks
==4094715==         suppressed: 0 bytes in 0 blocks
==4094715== Reachable blocks (those to which a pointer was found) are not shown.
==4094715== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==4094715== 
==4094715== For lists of detected and suppressed errors, rerun with: -s
==4094715== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

You have NOT passed your test cases!
You should go and figure out/understand where thing went wrong
And fix the problem(s) before the deadline

Overall Grade: NO GRADE YET
