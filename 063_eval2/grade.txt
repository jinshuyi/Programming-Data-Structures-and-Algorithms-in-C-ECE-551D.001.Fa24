Grading at 10/29/2024:00:52:00.998161
For commit ID 7f61aa8edf2d00b447be405ca71fe3cea1e07240
Grading at Mon Oct 28 08:51:58 PM EDT 2024
Doing some basic checking for your submission

Step 1
Checking that story-step1 compiles
rm -f *~ story-step3 story-step3.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
The code compiled (good)
Executable story-step1 exists (good)
Checking with provided test case story.txt
Your file matched the expected output
Now running YOUR tests for step 1

1.1: Current test is story-step1 story.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 2
Checking that story-step2 compiles
rm -f *~ story-step3 story-step3.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step2.c
gcc -o story-step2 story-step2.o rand_story.o provided.o
rm story-step2.o
The code compiled (good)
Executable story-step2 exists (good)
Now running YOUR tests for step 2

2.1: Current test is story-step2 words.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 3
Checking that story-step3 compiles
rm -f *~ story-step3 story-step3.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
The code compiled (good)
Executable story-step3 exists (good)
Now running YOUR tests for step 3

3.1: Current test is story-step3 words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==1304575== Memcheck, a memory error detector
==1304575== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1304575== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1304575== Command: ./story-step3 words.txt story2.txt
==1304575== Parent PID: 1304574
==1304575== 
==1304575== 
==1304575== HEAP SUMMARY:
==1304575==     in use at exit: 28 bytes in 4 blocks
==1304575==   total heap usage: 34 allocs, 30 frees, 13,870 bytes allocated
==1304575== 
==1304575== 28 bytes in 4 blocks are definitely lost in loss record 1 of 1
==1304575==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==1304575==    by 0x490B58E: strdup (strdup.c:42)
==1304575==    by 0x109F08: replace_category_with_backreference (rand_story.c:157)
==1304575==    by 0x10A05E: read_template_with_backreference (rand_story.c:184)
==1304575==    by 0x1094A9: main (story-step3.c:22)
==1304575== 
==1304575== LEAK SUMMARY:
==1304575==    definitely lost: 28 bytes in 4 blocks
==1304575==    indirectly lost: 0 bytes in 0 blocks
==1304575==      possibly lost: 0 bytes in 0 blocks
==1304575==    still reachable: 0 bytes in 0 blocks
==1304575==         suppressed: 0 bytes in 0 blocks
==1304575== 
==1304575== For lists of detected and suppressed errors, rerun with: -s
==1304575== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Step 4
Checking that story-step4 compiles
rm -f *~ story-step3 story-step3.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step4.c
The code did not compile!

Overall Grade: NO GRADE YET
