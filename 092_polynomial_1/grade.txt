Grading at 11/08/2024:06:17:55.826981
For commit ID 240ad881ff0626152ace146dfa64ddf1e89c8645
Grading at Fri Nov  8 01:17:55 AM EST 2024
Compiling your code with our test main
In file included from testmain.cpp:4:
poly.hpp: In member function ‘Polynomial<NumT> Polynomial<NumT>::operator+(const Polynomial<NumT>&) const’:
poly.hpp:30:16: error: ‘auto’ changes meaning in C++11; please remove it [-Werror=c++11-compat]
   30 |     for (const auto & term : rhs.terms) {
      |                ^~~~
      |                ----
poly.hpp:30:23: error: ISO C++ forbids declaration of ‘term’ with no type [-fpermissive]
   30 |     for (const auto & term : rhs.terms) {
      |                       ^~~~
poly.hpp:30:30: error: range-based ‘for’ loops only available with ‘-std=c++11’ or ‘-std=gnu++11’ [-Werror]
   30 |     for (const auto & term : rhs.terms) {
      |                              ^~~
poly.hpp:31:27: error: request for member ‘second’ in ‘term’, which is of non-class type ‘const int’
   31 |       result.addTerm(term.second, term.first);
      |                           ^~~~~~
poly.hpp:31:40: error: request for member ‘first’ in ‘term’, which is of non-class type ‘const int’
   31 |       result.addTerm(term.second, term.first);
      |                                        ^~~~~
poly.hpp: In member function ‘Polynomial<NumT> Polynomial<NumT>::operator-() const’:
poly.hpp:39:16: error: ‘auto’ changes meaning in C++11; please remove it [-Werror=c++11-compat]
   39 |     for (const auto & term : terms) {
      |                ^~~~
      |                ----
poly.hpp:39:23: error: ISO C++ forbids declaration of ‘term’ with no type [-fpermissive]
   39 |     for (const auto & term : terms) {
      |                       ^~~~
poly.hpp:39:30: error: range-based ‘for’ loops only available with ‘-std=c++11’ or ‘-std=gnu++11’ [-Werror]
   39 |     for (const auto & term : terms) {
      |                              ^~~~~
poly.hpp:40:25: error: request for member ‘first’ in ‘term’, which is of non-class type ‘const int’
   40 |       result.terms[term.first] = -term.second;
      |                         ^~~~~
poly.hpp:40:40: error: request for member ‘second’ in ‘term’, which is of non-class type ‘const int’
   40 |       result.terms[term.first] = -term.second;
      |                                        ^~~~~~
poly.hpp: In member function ‘Polynomial<NumT> Polynomial<NumT>::operator*(const NumT&) const’:
poly.hpp:51:16: error: ‘auto’ changes meaning in C++11; please remove it [-Werror=c++11-compat]
   51 |     for (const auto & term : terms) {
      |                ^~~~
      |                ----
poly.hpp:51:23: error: ISO C++ forbids declaration of ‘term’ with no type [-fpermissive]
   51 |     for (const auto & term : terms) {
      |                       ^~~~
poly.hpp:51:30: error: range-based ‘for’ loops only available with ‘-std=c++11’ or ‘-std=gnu++11’ [-Werror]
   51 |     for (const auto & term : terms) {
      |                              ^~~~~
poly.hpp:52:25: error: request for member ‘first’ in ‘term’, which is of non-class type ‘const int’
   52 |       result.terms[term.first] = term.second * n;
      |                         ^~~~~
poly.hpp:52:39: error: request for member ‘second’ in ‘term’, which is of non-class type ‘const int’
   52 |       result.terms[term.first] = term.second * n;
      |                                       ^~~~~~
poly.hpp: In member function ‘Polynomial<NumT> Polynomial<NumT>::operator*(const Polynomial<NumT>&) const’:
poly.hpp:60:16: error: ‘auto’ changes meaning in C++11; please remove it [-Werror=c++11-compat]
   60 |     for (const auto & term1 : terms) {
      |                ^~~~
      |                ----
poly.hpp:60:23: error: ISO C++ forbids declaration of ‘term1’ with no type [-fpermissive]
   60 |     for (const auto & term1 : terms) {
      |                       ^~~~~
poly.hpp:60:31: error: range-based ‘for’ loops only available with ‘-std=c++11’ or ‘-std=gnu++11’ [-Werror]
   60 |     for (const auto & term1 : terms) {
      |                               ^~~~~
poly.hpp:61:18: error: ‘auto’ changes meaning in C++11; please remove it [-Werror=c++11-compat]
   61 |       for (const auto & term2 : rhs.terms) {
      |                  ^~~~
      |                  ----
poly.hpp:61:25: error: ISO C++ forbids declaration of ‘term2’ with no type [-fpermissive]
   61 |       for (const auto & term2 : rhs.terms) {
      |                         ^~~~~
poly.hpp:61:33: error: range-based ‘for’ loops only available with ‘-std=c++11’ or ‘-std=gnu++11’ [-Werror]
   61 |       for (const auto & term2 : rhs.terms) {
      |                                 ^~~
poly.hpp:62:30: error: request for member ‘second’ in ‘term1’, which is of non-class type ‘const int’
   62 |         result.addTerm(term1.second * term2.second, term1.first + term2.first);
      |                              ^~~~~~
poly.hpp:62:45: error: request for member ‘second’ in ‘term2’, which is of non-class type ‘const int’
   62 |         result.addTerm(term1.second * term2.second, term1.first + term2.first);
      |                                             ^~~~~~
poly.hpp:62:59: error: request for member ‘first’ in ‘term1’, which is of non-class type ‘const int’
   62 |         result.addTerm(term1.second * term2.second, term1.first + term2.first);
      |                                                           ^~~~~
poly.hpp:62:73: error: request for member ‘first’ in ‘term2’, which is of non-class type ‘const int’
   62 |         result.addTerm(term1.second * term2.second, term1.first + term2.first);
      |                                                                         ^~~~~
poly.hpp: In function ‘std::ostream& operator<<(std::ostream&, const Polynomial<T>&)’:
poly.hpp:104:8: error: ‘auto’ changes meaning in C++11; please remove it [-Werror=c++11-compat]
  104 |   for (auto it = p.terms.rbegin(); it != p.terms.rend(); ++it) {
      |        ^~~~
      |        ----
poly.hpp:104:13: error: ‘it’ does not name a type; did you mean ‘int’?
  104 |   for (auto it = p.terms.rbegin(); it != p.terms.rend(); ++it) {
      |             ^~
      |             int
poly.hpp:104:35: error: expected ‘;’ before ‘it’
  104 |   for (auto it = p.terms.rbegin(); it != p.terms.rend(); ++it) {
      |                                   ^~~
      |                                   ;
poly.hpp:104:36: error: ‘it’ was not declared in this scope; did you mean ‘int’?
  104 |   for (auto it = p.terms.rbegin(); it != p.terms.rend(); ++it) {
      |                                    ^~
      |                                    int
testmain.cpp: In function ‘int main()’:
testmain.cpp:50:8: error: ‘vector’ is not a member of ‘std’
   50 |   std::vector<Polynomial<int> > polys;
      |        ^~~~~~
testmain.cpp:5:1: note: ‘std::vector’ is defined in header ‘<vector>’; did you forget to ‘#include <vector>’?
    4 | #include "poly.hpp"
  +++ |+#include <vector>
    5 | 
testmain.cpp:50:31: error: expected primary-expression before ‘>’ token
   50 |   std::vector<Polynomial<int> > polys;
      |                               ^
testmain.cpp:50:33: error: ‘polys’ was not declared in this scope
   50 |   std::vector<Polynomial<int> > polys;
      |                                 ^~~~~
In file included from testmain.cpp:4:
poly.hpp: In instantiation of ‘Polynomial<NumT> Polynomial<NumT>::operator-() const [with NumT = int]’:
testmain.cpp:15:28:   required from here
poly.hpp:39:5: error: invalid initialization of reference of type ‘const int&’ from expression of type ‘const std::pair<const unsigned int, int>’
   39 |     for (const auto & term : terms) {
      |     ^~~
poly.hpp:39:23: error: loop variable ‘term’ of type ‘const int&’ binds to a temporary constructed from type ‘const std::pair<const unsigned int, int>’ [-Werror=range-loop-construct]
   39 |     for (const auto & term : terms) {
      |                       ^~~~
poly.hpp:39:23: note: use non-reference type ‘const int’ to make the copy explicit or ‘const std::pair<const unsigned int, int>&’ to prevent copying
poly.hpp: In instantiation of ‘Polynomial<NumT> Polynomial<NumT>::operator+(const Polynomial<NumT>&) const [with NumT = int]’:
testmain.cpp:21:36:   required from here
poly.hpp:30:5: error: invalid initialization of reference of type ‘const int&’ from expression of type ‘const std::pair<const unsigned int, int>’
   30 |     for (const auto & term : rhs.terms) {
      |     ^~~
poly.hpp:30:23: error: loop variable ‘term’ of type ‘const int&’ binds to a temporary constructed from type ‘const std::pair<const unsigned int, int>’ [-Werror=range-loop-construct]
   30 |     for (const auto & term : rhs.terms) {
      |                       ^~~~
poly.hpp:30:23: note: use non-reference type ‘const int’ to make the copy explicit or ‘const std::pair<const unsigned int, int>&’ to prevent copying
poly.hpp: In instantiation of ‘Polynomial<NumT> Polynomial<NumT>::operator*(const Polynomial<NumT>&) const [with NumT = int]’:
testmain.cpp:22:36:   required from here
poly.hpp:60:5: error: invalid initialization of reference of type ‘const int&’ from expression of type ‘const std::pair<const unsigned int, int>’
   60 |     for (const auto & term1 : terms) {
      |     ^~~
poly.hpp:60:23: error: loop variable ‘term1’ of type ‘const int&’ binds to a temporary constructed from type ‘const std::pair<const unsigned int, int>’ [-Werror=range-loop-construct]
   60 |     for (const auto & term1 : terms) {
      |                       ^~~~~
poly.hpp:60:23: note: use non-reference type ‘const int’ to make the copy explicit or ‘const std::pair<const unsigned int, int>&’ to prevent copying
poly.hpp:61:7: error: invalid initialization of reference of type ‘const int&’ from expression of type ‘const std::pair<const unsigned int, int>’
   61 |       for (const auto & term2 : rhs.terms) {
      |       ^~~
poly.hpp:61:25: error: loop variable ‘term2’ of type ‘const int&’ binds to a temporary constructed from type ‘const std::pair<const unsigned int, int>’ [-Werror=range-loop-construct]
   61 |       for (const auto & term2 : rhs.terms) {
      |                         ^~~~~
poly.hpp:61:25: note: use non-reference type ‘const int’ to make the copy explicit or ‘const std::pair<const unsigned int, int>&’ to prevent copying
poly.hpp: In instantiation of ‘Polynomial<NumT> Polynomial<NumT>::operator*(const NumT&) const [with NumT = double]’:
testmain.cpp:81:42:   required from here
poly.hpp:51:5: error: invalid initialization of reference of type ‘const int&’ from expression of type ‘const std::pair<const unsigned int, double>’
   51 |     for (const auto & term : terms) {
      |     ^~~
poly.hpp:51:23: error: loop variable ‘term’ of type ‘const int&’ binds to a temporary constructed from type ‘const std::pair<const unsigned int, double>’ [-Werror=range-loop-construct]
   51 |     for (const auto & term : terms) {
      |                       ^~~~
poly.hpp:51:23: note: use non-reference type ‘const int’ to make the copy explicit or ‘const std::pair<const unsigned int, double>&’ to prevent copying
poly.hpp: In instantiation of ‘Polynomial<NumT> Polynomial<NumT>::operator*(const NumT&) const [with NumT = int]’:
poly.hpp:91:19:   required from ‘Polynomial<NumT>& Polynomial<NumT>::operator*=(const NumT&) [with NumT = int]’
testmain.cpp:43:9:   required from here
poly.hpp:51:5: error: invalid initialization of reference of type ‘const int&’ from expression of type ‘const std::pair<const unsigned int, int>’
   51 |     for (const auto & term : terms) {
      |     ^~~
poly.hpp:51:23: error: loop variable ‘term’ of type ‘const int&’ binds to a temporary constructed from type ‘const std::pair<const unsigned int, int>’ [-Werror=range-loop-construct]
   51 |     for (const auto & term : terms) {
      |                       ^~~~
poly.hpp:51:23: note: use non-reference type ‘const int’ to make the copy explicit or ‘const std::pair<const unsigned int, int>&’ to prevent copying
cc1plus: all warnings being treated as errors
g++ failed

Overall Grade: FAILED
